{
  "apiVersion": "apiextensions.k8s.io/v1",
  "kind": "CustomResourceDefinition",
  "metadata": {
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    },
    "name": "roles.storage.webmesh.io"
  },
  "spec": {
    "group": "storage.webmesh.io",
    "names": {
      "kind": "Role",
      "listKind": "RoleList",
      "plural": "roles",
      "singular": "role"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1",
        "schema": {
          "openAPIV3Schema": {
            "description": "Role is the Schema for the roles API.",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "RoleSpec defines the desired state of a Role.",
                "properties": {
                  "role": {
                    "description": "Role wraps a role.",
                    "properties": {
                      "name": {
                        "description": "name is the name of the role.",
                        "type": "string"
                      },
                      "rules": {
                        "description": "rules is the list of rules that apply to the role.",
                        "items": {
                          "description": "Rule is a rule that applies to a resource.",
                          "properties": {
                            "resourceNames": {
                              "description": "resource_names is the list of resource names to which the rule applies.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "resources": {
                              "description": "resources is the resources to which the rule applies.",
                              "items": {
                                "description": "RuleResource is the resource type for a rule.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "verbs": {
                              "description": "verbs is the list of verbs that apply to the resource.",
                              "items": {
                                "description": "RuleVerb is the verb type for a rule.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "role"
                ],
                "type": "object"
              },
              "status": {
                "description": "RoleStatus defines the observed state of a Role.",
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "served": true,
        "storage": true,
        "subresources": {
          "status": {}
        }
      }
    ]
  }
}
