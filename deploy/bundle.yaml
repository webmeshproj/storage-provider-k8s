# Source: https://github.com/webmeshproj/storage-provider-k8s/raw/main/deploy/bundle.yaml
---
# Source: deploy/crds/storage.webmesh.io_peers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: peers.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: Peer
    listKind: PeerList
    plural: peers
    singular: peer
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Peer is the Schema for the peers API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          features:
            description: Features are a list of features and the ports they are advertised
              on.
            items:
              description: FeaturePort describes a feature and the port it is advertised
                on.
              properties:
                feature:
                  description: Feature is the feature advertised on the port.
                  format: int32
                  type: integer
                port:
                  description: Port is the port the feature is advertised on.
                  format: int32
                  type: integer
              type: object
            type: array
          id:
            description: ID is the ID of the node.
            type: string
          joinedAt:
            description: JoinedAt is the time the node joined the cluster.
            properties:
              nanos:
                description: Non-negative fractions of a second at nanosecond resolution.
                  Negative second values with fractions must still have non-negative
                  nanos values that count forward in time. Must be from 0 to 999,999,999
                  inclusive.
                format: int32
                type: integer
              seconds:
                description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.
                  Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                format: int64
                type: integer
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          multiaddrs:
            description: Multiaddrs are the multiaddrs of the node.
            items:
              type: string
            type: array
          primaryEndpoint:
            description: PrimaryEndpoint is the primary endpoint of the node.
            type: string
          privateIPv4:
            description: PrivateIPv4 is the private IPv4 address of the node.
            type: string
          privateIPv6:
            description: PrivateIPv6 is the private IPv6 address of the node.
            type: string
          publicKey:
            description: PublicKey is the public key of the node.
            type: string
          wireguardEndpoints:
            description: WireguardEndpoints is a list of WireGuard endpoints for the
              node.
            items:
              type: string
            type: array
          zoneAwarenessID:
            description: ZoneAwarenessID is the zone awareness ID of the node.
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_roles.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: roles.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the roles API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          name:
            description: Name is the name of the role.
            type: string
          rules:
            description: Rules is the list of rules that apply to the role.
            items:
              description: Rule is a rule that applies to a resource.
              properties:
                resourceNames:
                  description: ResourceNames is the list of resource names to which
                    the rule applies.
                  items:
                    type: string
                  type: array
                resources:
                  description: Resources is the resources to which the rule applies.
                  items:
                    description: RuleResource is the resource type for a rule.
                    format: int32
                    type: integer
                  type: array
                verbs:
                  description: Verbs is the list of verbs that apply to the resource.
                  items:
                    description: RuleVerb is the verb type for a rule.
                    format: int32
                    type: integer
                  type: array
              type: object
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_groups.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: groups.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Group is the Schema for the Groups API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          name:
            description: Name is the name of the group.
            type: string
          subjects:
            description: Subjects is the list of subjects in the group.
            items:
              description: Subject is a subject to which a role can be bound.
              properties:
                name:
                  description: Name is the name of the subject.
                  type: string
                type:
                  description: Type is the type of the subject.
                  format: int32
                  type: integer
              type: object
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_networkacls.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: networkacls.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: NetworkACL
    listKind: NetworkACLList
    plural: networkacls
    singular: networkacl
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NetworkACL is the Schema for the NetworkACLs API.
        properties:
          action:
            description: Action is the action to take when a request matches the ACL.
            format: int32
            type: integer
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          destinationCIDRs:
            description: DestinationCIDRs is a list of destination CIDRs to match
              against. If empty, all CIDRs are matched. If one or more of the CIDRs
              is '*', all CIDRs are matched.
            items:
              type: string
            type: array
          destinationNodes:
            description: DestinationNodes is a list of destination nodes to match
              against. If empty, all nodes are matched. Groups can be specified with
              the prefix "group:". If one or more of the nodes is '*', all nodes are
              matched.
            items:
              type: string
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          name:
            description: Name is the name of the ACL.
            type: string
          priority:
            description: Priority is the priority of the ACL. ACLs with higher priority
              are evaluated first.
            format: int32
            type: integer
          sourceCIDRs:
            description: SourceCIDRs is a list of source CIDRs to match against. If
              empty, all CIDRs are matched. If one or more of the CIDRs is '*', all
              CIDRs are matched.
            items:
              type: string
            type: array
          sourceNodes:
            description: SourceNodes is a list of source nodes to match against. If
              empty, all nodes are matched. Groups can be specified with the prefix
              "group:". If one or more of the nodes is '*', all nodes are matched.
            items:
              type: string
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_rolebindings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: rolebindings.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: RoleBinding
    listKind: RoleBindingList
    plural: rolebindings
    singular: rolebinding
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RoleBinding is the Schema for the rolebindings API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          name:
            description: Name is the name of the role binding.
            type: string
          role:
            description: Role is the name of the role to which the binding applies.
            type: string
          subjects:
            description: Subjects is the list of subjects to which the binding applies.
            items:
              description: Subject is a subject to which a role can be bound.
              properties:
                name:
                  description: Name is the name of the subject.
                  type: string
                type:
                  description: Type is the type of the subject.
                  format: int32
                  type: integer
              type: object
            type: array
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_routes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: routes.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          destinationCIDRs:
            description: DestinationCIDRs are the destination CIDRs of the route.
            items:
              type: string
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          name:
            description: Name is the name of the route.
            type: string
          nextHopNode:
            description: NextHopNode is an optional node that is used as the next
              hop for the route. This field is not currentl used.
            type: string
          node:
            description: Node is the node that broadcasts the route. A group can be
              specified with the prefix "group:".
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_meshedges.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: meshedges.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: MeshEdge
    listKind: MeshEdgeList
    plural: meshedges
    singular: meshedge
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MeshEdge is the Schema for the MeshEdges API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          attributes:
            additionalProperties:
              type: string
            description: Attributes is a list of attributes for the edge.
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          source:
            description: Source is the source node.
            type: string
          target:
            description: Target is the target node.
            type: string
          weight:
            description: Weight is the weight of the edge.
            format: int32
            type: integer
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_meshstates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: meshstates.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: MeshState
    listKind: MeshStateList
    plural: meshstates
    singular: meshstate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MeshState is the Schema for the MeshState API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          domain:
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          networkV4:
            type: string
          networkV6:
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/crds/storage.webmesh.io_storagepeers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: storagepeers.storage.webmesh.io
spec:
  group: storage.webmesh.io
  names:
    kind: StoragePeer
    listKind: StoragePeerList
    plural: storagepeers
    singular: storagepeer
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: StoragePeer is the Schema for the StoragePeer API.
        properties:
          address:
            description: Address is the address of the server. This is not required
              for demotion or removal RPCs.
            type: string
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          clusterStatus:
            description: ClusterStatus is the status of the server. This is only applicable
              during a GetStatus RPC.
            format: int32
            type: integer
          id:
            description: ID is the id of the server.
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          publicKey:
            description: PublicKey is the encoded public key of the server. This is
              not required for demotion or removal RPCs. Not all implementations need
              to support this.
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: deploy/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: webmesh-storage-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - groups
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - groups/status
  - rolebindings/status
  - roles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - storage.webmesh.io
  resources:
  - meshedges
  - peers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - meshedges/status
  - peers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - storage.webmesh.io
  resources:
  - meshstates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - networkacls
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - networkacls/status
  - routes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - storage.webmesh.io
  resources:
  - storagepeers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.webmesh.io
  resources:
  - storagepeers/status
  verbs:
  - get
  - patch
  - update
